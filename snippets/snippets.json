{
  "cli-command-help-build": "\nw3 build [options]\n\nOptions:\n  -h, --help                         Show usage information\n  -m, --manifest-file <path>         Path to the Web3API Build manifest file (default: web3api.yaml | web3api.yml)\n  -o, --output-dir <path>            Output directory for build results (default: build/)\n  -w, --watch                        Automatically rebuild when changes are made (default: false)\n  -v, --verbose                      Verbose output (default: false)\n\n",
  "cli-command-help-codegen": "\nw3 codegen [options]\n\nOptions:\n  -h, --help                              Show usage information\n  -m, --manifest-file <path>              Path to the Web3API manifest file (default: web3api.yaml | web3api.yml)\n  -c, --codegen-dir <path>                Output directory for the generated code (default: ./w3)\n  -s, --script <path>                     Path to a custom generation script (JavaScript | TypeScript)\n  -i, --ipfs [<node>]                     IPFS node to load external schemas (default: ipfs.io & localhost)\n  -e, --ens [<address>]                   ENS address to lookup external schemas (default: 0x0000...2e1e)\n\n",
  "cli-command-help-deploy": "\nw3 deploy [options]\n\nOptions:\n  -h, --help                         Show usage information\n  -m, --manifest-file <path>         Path to the Web3API Deploy manifest file (default: web3api.yaml | web3api.yml)\n  -v, --verbose                      Verbose output (default: false)\n",
  "cli-command-help-query": "Required argument <recipe-script> is missing\n\nw3 query [options] <recipe-script>\n\nOptions:\n  -t, --test-ens  Use the development server's ENS instance\n  -c, --client-config <config-path> Add custom configuration to the Web3ApiClient\n  -o, --output-file  Output file path for the query result\n  -q, --quiet  Suppress output\n\n",
  "cli-command-help-test-env": "No command given\n\nw3 test-env command\n\nCommands:\n  up    Startup the test env\n  down  Shutdown the test env\n\n",
  "js-create-client-instance": "import { Web3ApiClient } from \"@web3api/client-js\";\n\nconst client = new Web3ApiClient();",
  "js-client-hello-world": "client.invoke({\n  uri: \"ens/api.helloworld.web3api.eth\",\n  module: \"query\",\n  method: \"logMessage\",\n  input: {\n    message: \"Hello World!\"\n  }\n});"
}